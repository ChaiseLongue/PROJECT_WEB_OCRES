{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\events.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport \"../styles/table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios');\n\nlet value = null;\nlet oldValue = null;\nvar yes = false;\nvar password = false;\nlet component = null;\nexport default function EventTables() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EventModifTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addBut\",\n        id: \"addBut\",\n        onClick: () => handleAdd(),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addEvent\",\n      id: \"addEvent\",\n      children: [/*#__PURE__*/_jsxDEV(AddEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"fix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventListTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} // A card used to contain all data from api\n\n_c = EventTables;\n\nfunction EventListTable() {\n  _s();\n\n  const [dat, setDat] = useState([]);\n\n  const fetchDat = async () => {\n    //console.log(\"coucou2\")\n    await axios.get('http://localhost:9000/albums').then(all => {\n      //console.log(\"coucou4\")\n      //console.log(all.data[0])\n      const tab = [];\n\n      for (let i = 0; i < all.data.length; i++) {\n        const actual = {\n          Title: all.data[i].Album.Title,\n          ImageCount: all.data[i].Album.ImageCount,\n          LastUpdated: all.data[i].Album.LastUpdated,\n          Public: JSON.stringify(all.data[i].Album.Public),\n          URL: ClickLink(all.data[i].Album.URL)\n        };\n        tab.push(actual); //console.log(actual)\n      }\n\n      setDat(tab);\n    }); //console.log(\"coucou3\")\n  };\n\n  useEffect(() => {\n    //console.log(\"coucou\")\n    fetchDat(); //console.log( {dat} );\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Titre',\n    accessor: 'Title'\n  }, {\n    Header: 'Nombre Images',\n    accessor: 'ImageCount'\n  }, {\n    Header: 'DerniÃ¨re modification',\n    accessor: 'LastUpdated'\n  }, {\n    Header: 'Accessible',\n    accessor: 'Public'\n  }, {\n    Header: 'Lien',\n    accessor: 'URL'\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"tableInside\",\n      columns: columns,\n      data: dat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(EventListTable, \"tQ8uXuj0bpLOWhdq909dntgvR70=\");\n\n_c2 = EventListTable;\n\nfunction handleAdd() {\n  //let add = document.getElementById(\"add\");\n  let add = document.getElementById(\"addEvent\");\n\n  if (add.style.display != \"flex\") {\n    add.style.display = \"flex\";\n    document.getElementById(\"addBut\").innerHTML = '-';\n    console.log(\"on affiche\");\n  } else {\n    add.style.display = \"none\";\n    document.getElementById(\"addBut\").innerHTML = '+';\n  }\n}\n\nfunction ClickLink(params) {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    contentEditable: \"false\",\n    className: \"lien\",\n    onClick: () => window.open(params, \"_blank\"),\n    children: \"Cliquer ici pour acceder\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 12\n  }, this);\n}\n\n_c3 = ClickLink;\n\nfunction EventModifTable() {\n  _s2();\n\n  const [dat, setDat] = useState([]);\n\n  const fetchDat = async () => {\n    //console.log(\"coucou2\")\n    await axios.get('http://localhost:9000/events/all').then(all => {\n      const tab = [];\n\n      for (let i = 0; i < all.data.length; i++) {\n        const actual = {\n          Event: all.data[i].event,\n          Date: all.data[i].date,\n          PositionName: all.data[i].position.name,\n          Couvreurs: all.data[i].couvreurs\n        };\n        tab.push(actual); //console.log(actual)\n      }\n\n      setDat(tab);\n    }); //console.log(\"coucou3\")\n  };\n\n  useEffect(() => {\n    //console.log(\"coucou\")\n    fetchDat(); //console.log( {dat} );\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Event',\n    accessor: 'Event'\n  }, {\n    Header: 'Date',\n    accessor: 'Date'\n  }, {\n    Header: 'Position',\n    accessor: 'PositionName'\n  }, {\n    Header: 'Couvreurs',\n    accessor: 'Couvreurs'\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PopUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableModif, {\n      className: \"tableInside\",\n      columns: columns,\n      data: dat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(EventModifTable, \"tQ8uXuj0bpLOWhdq909dntgvR70=\");\n\n_c4 = EventModifTable;\n\nfunction PopUp(params, dvalue) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pop-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: \" Do you really want to change 1 by 2 ? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"yes\",\n        onClick: () => sendData(),\n        children: \" Yes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"no\",\n        onClick: () => handleChange(-1, -1),\n        children: \" No \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = PopUp;\n\nfunction AddEvent() {\n  const events = {\n    event: \"\",\n    date: \"\",\n    position: \"\",\n    couvreurs: [{\n      name: \"\"\n    }]\n  };\n\n  const handleFormChangeE = e => {\n    events.event = e.target.value;\n  };\n\n  const handleFormChangeD = e => {\n    events.date = e.target.value;\n  };\n\n  const handleFormChangeP = e => {\n    events.position = e.target.value;\n  };\n\n  const handleFormChangeC = e => {\n    events.couvreurs = e.target.value.split(' ');\n  };\n\n  const send = async e => {\n    //alert(events.event + \" \" + events.date + \" \" +events.position + \" \" +events.couvreurs);\n    let link = 'http://localhost:9000/events?event=' + events.event + '&date=' + events.date + '&name=' + events.position + '&lat=0&lng=0';\n\n    for (let i = 0; i < events.couvreurs.length; i++) {\n      link = link + '&couvreurs= ' + events.couvreurs[i];\n    }\n\n    await axios.post(link);\n  };\n\n  let year = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add an Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => send(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        name: \"event\",\n        onBlur: e => handleFormChangeE(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of the event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onBlur: e => handleFormChangeD(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Place of the Event\",\n        name: \"position\",\n        onBlur: e => handleFormChangeP(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Couvreurs\",\n        name: \"couvreurs\",\n        onBlur: e => handleFormChangeC(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"submit\",\n        type: \"submit\",\n        value: \"SUBMIT\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = AddEvent;\n\nfunction sendData() {\n  if (password == true) {\n    axios.post('http://localhost:9000/events/any/' + oldValue.slice(0, oldValue.length - 1) + '?to=' + value);\n  }\n\n  if (password == false) {\n    console.log(\"database: \" + oldValue + \" nouvelle: \" + value); //on se connecte Ã  la db\n    //on trouve lelement qui correspond Ã  oldValue,\n    //Si on trouve on demande un mot de passe => on modifie la valeur dans la db\n\n    var data = \"Enter Password:<br></br><input id='password' type='password' placeholder='Password'>\";\n    document.getElementById(\"content\").innerHTML = data;\n    document.getElementById(\"yes\").innerHTML = \"Send\";\n    document.getElementById(\"no\").innerHTML = \"Cancel\";\n    password = true;\n  } else {\n    console.log(document.getElementById(\"password\").value);\n    password = false;\n    let popUp = document.getElementById(\"pop-up\");\n    popUp.style.display = \"none\";\n    yes = false; //We set back the buttons setup\n\n    document.getElementById(\"yes\").innerHTML = \"Yes\";\n    document.getElementById(\"no\").innerHTML = \"No\";\n  }\n}\n\nasync function handleChange(params, dvalue) {\n  if (params != dvalue && dvalue != null && yes == false && params != '' && dvalue != '' && params != 'Cliquer ici pour acceder' && dvalue != 'Cliquer ici pour acceder') {\n    console.log(\"on rentre dans la boucle \" + params + \" \" + dvalue); //return <div className=\"pop-up\">Do you Really want to change ${dvalue} by ${params} ? </div>\n\n    let popUp = document.getElementById(\"pop-up\");\n\n    if (popUp.style.display != \"flex\") {\n      popUp.style.display = \"flex\";\n      console.log(\"on affiche\");\n    }\n\n    document.getElementById(\"content\").innerHTML = \"Do you Really want to change \" + dvalue + \" by \" + params + \" ?\";\n    oldValue = dvalue;\n    value = params;\n    yes = true;\n    console.log(\"dans la fonction old: \" + oldValue + \" / nouv: \" + value); // PROBLEME SI ON MODIFIE UNE DATE\n  } else if (params == -1) {\n    console.log(\"on ferme\");\n    let popUp = document.getElementById(\"pop-up\");\n    popUp.style.display = \"none\";\n    yes = false;\n    console.log(\"component: \" + component.textContent);\n    component.innerHTML = oldValue;\n    console.log(\"component: \" + component.textContent);\n\n    if (password == true) {\n      //We set back the buttons setup\n      document.getElementById(\"yes\").innerHTML = \"Yes\";\n      document.getElementById(\"no\").innerHTML = \"No\";\n      password = false; //We update in the database\n      //axios.post()\n    }\n  } else if (params == '') {\n    axios.post('http://localhost:9000/events/delete/' + JSON.stringify({\n      event: dvalue.slice(0, dvalue.length - 1)\n    })); //component.innerHTML=dvalue;\n  } else if (dvalue == '') {\n    component.innerHTML = params;\n  }\n} //Code taken from the exemple presentation for react-table\n\n\nfunction Table(_ref) {\n  _s3();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  let lol = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tableau\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ð½' : ' ð¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return (\n                /*#__PURE__*/\n                //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                _jsxDEV(\"td\", {\n                  className: \"cellule\",\n                  ...cell.getCellProps(),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [cell.render('Cell'), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 25\n                }, this) //<div contentEditable onClick={(truc) => {lol=truc.target.textContent; component=truc.currentTarget; console.log(\"on a \" + component.textContent)}} onBlur={(truc)=> handleChange(truc.target.textContent,lol)}>{cell.render('Cell')} </div>\n                //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\n\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} //Code taken from the exemple presentation for react-table\n\n\n_s3(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n  return [useTable];\n});\n\n_c7 = Table;\n\nfunction TableModif(_ref2) {\n  _s4();\n\n  let {\n    columns,\n    data\n  } = _ref2;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  let lol = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tableau\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ð½' : ' ð¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return (\n                /*#__PURE__*/\n                //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                _jsxDEV(\"td\", {\n                  className: \"cellule\",\n                  ...cell.getCellProps(),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    contentEditable: true,\n                    onClick: truc => {\n                      lol = truc.target.textContent;\n                      if (yes == false) component = truc.currentTarget;\n                      console.log(\"on a \" + component.textContent);\n                    },\n                    onBlur: truc => handleChange(truc.target.textContent, lol),\n                    children: [cell.render('Cell'), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this) //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\n\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s4(TableModif, \"BYNTWeoXdryq+6lvDEiS5kf/9Fc=\", false, function () {\n  return [useTable];\n});\n\n_c8 = TableModif;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"EventTables\");\n$RefreshReg$(_c2, \"EventListTable\");\n$RefreshReg$(_c3, \"ClickLink\");\n$RefreshReg$(_c4, \"EventModifTable\");\n$RefreshReg$(_c5, \"PopUp\");\n$RefreshReg$(_c6, \"AddEvent\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"TableModif\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/events.js"],"names":["React","useEffect","useState","useTable","useSortBy","default","axios","require","value","oldValue","yes","password","component","EventTables","handleAdd","EventListTable","dat","setDat","fetchDat","get","then","all","tab","i","data","length","actual","Title","Album","ImageCount","LastUpdated","Public","JSON","stringify","URL","ClickLink","push","columns","useMemo","Header","accessor","add","document","getElementById","style","display","innerHTML","console","log","params","window","open","EventModifTable","Event","event","Date","date","PositionName","position","name","Couvreurs","couvreurs","PopUp","dvalue","sendData","handleChange","AddEvent","events","handleFormChangeE","e","target","handleFormChangeD","handleFormChangeP","handleFormChangeC","split","send","link","post","year","slice","popUp","textContent","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","lol","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","TableModif","truc","currentTarget"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport \"../styles/table.css\";\r\nconst { default: axios } = require('axios');\r\nlet value=null;\r\nlet oldValue=null;\r\nvar yes=false;\r\nvar password=false;\r\nlet component=null;\r\n\r\nexport default function EventTables(){\r\n  return(\r\n    <div>\r\n      <EventModifTable/>\r\n      <div className=\"theButton\">\r\n          <button className=\"addBut\" id=\"addBut\" onClick={() => handleAdd()}> + </button>\r\n      </div>\r\n      <div className=\"addEvent\" id=\"addEvent\">\r\n          <AddEvent />\r\n          <div class=\"fix\"></div>\r\n      </div>\r\n      <EventListTable/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n// A card used to contain all data from api\r\nfunction EventListTable(){\r\n\r\n    const [dat, setDat] = useState([]);\r\n\r\n    const fetchDat = async () => {\r\n        //console.log(\"coucou2\")\r\n        await axios.get('http://localhost:9000/albums').then(all => \r\n                {\r\n                    //console.log(\"coucou4\")\r\n                    //console.log(all.data[0])\r\n                    const tab = []\r\n                    for (let i = 0; i < all.data.length; i++) {\r\n                        const actual = \r\n                        {\r\n                            Title: all.data[i].Album.Title,\r\n                            ImageCount: all.data[i].Album.ImageCount,\r\n                            LastUpdated: all.data[i].Album.LastUpdated,\r\n                            Public: JSON.stringify(all.data[i].Album.Public),\r\n                            URL: ClickLink(all.data[i].Album.URL)\r\n                        };\r\n                        tab.push(actual)\r\n                        //console.log(actual)\r\n                    }\r\n                    setDat(tab);\r\n                }\r\n            );\r\n            //console.log(\"coucou3\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"coucou\")\r\n        fetchDat();\r\n        \r\n        //console.log( {dat} );\r\n    }, []);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Titre',\r\n                accessor: 'Title'\r\n            },\r\n            {\r\n                Header: 'Nombre Images',\r\n                accessor: 'ImageCount'\r\n            },\r\n            {\r\n                Header: 'DerniÃ¨re modification',\r\n                accessor: 'LastUpdated'\r\n            },\r\n            {\r\n                Header: 'Accessible',\r\n                accessor: 'Public'\r\n            },\r\n            {\r\n                Header: 'Lien',\r\n                accessor: 'URL'\r\n            },\r\n        ]\r\n    );\r\n\r\n\r\n    return (\r\n      <>\r\n        <Table className='tableInside' columns={columns} data={dat}/>\r\n        \r\n      </>\r\n    );\r\n}\r\n\r\nfunction handleAdd(){\r\n  //let add = document.getElementById(\"add\");\r\n  let add = document.getElementById(\"addEvent\");\r\n    if(add.style.display!=\"flex\"){\r\n      add.style.display = \"flex\";\r\n      document.getElementById(\"addBut\").innerHTML='-';\r\n      console.log(\"on affiche\");\r\n    }\r\n    else{\r\n      add.style.display = \"none\";\r\n      document.getElementById(\"addBut\").innerHTML='+';\r\n    }\r\n    \r\n}\r\n\r\nfunction ClickLink(params){\r\n    return <td contentEditable=\"false\" className=\"lien\" onClick={()=> window.open(params, \"_blank\")}>Cliquer ici pour acceder</td>;\r\n}\r\n\r\nfunction EventModifTable(){\r\n  const [dat, setDat] = useState([]);\r\n    \r\n    const fetchDat = async () => {\r\n        //console.log(\"coucou2\")\r\n        await axios.get('http://localhost:9000/events/all').then(all => \r\n                {\r\n                    const tab = []\r\n                    for (let i = 0; i < all.data.length; i++) {\r\n                        const actual = \r\n                        {\r\n                            Event: all.data[i].event,\r\n                            Date: all.data[i].date,\r\n                            PositionName: all.data[i].position.name,\r\n                            Couvreurs: all.data[i].couvreurs\r\n                        };\r\n                        tab.push(actual)\r\n                        //console.log(actual)\r\n                    }\r\n                    setDat(tab);\r\n                }\r\n            );\r\n            //console.log(\"coucou3\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"coucou\")\r\n        fetchDat();\r\n        \r\n        //console.log( {dat} );\r\n    }, []);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Event',\r\n                accessor: 'Event'\r\n            },\r\n            {\r\n                Header: 'Date',\r\n                accessor: 'Date'\r\n            },\r\n            {\r\n                Header: 'Position',\r\n                accessor: 'PositionName'\r\n            },\r\n            {\r\n                Header: 'Couvreurs',\r\n                accessor: 'Couvreurs'\r\n            }\r\n        ]\r\n    );\r\n\r\n\r\n    return (\r\n      <>\r\n        <PopUp />\r\n        <TableModif className='tableInside' columns={columns} data={dat} />\r\n      </>\r\n    );\r\n}\r\n\r\nfunction PopUp(params, dvalue){\r\n  return(\r\n    <div id=\"pop-up\"> \r\n      <div id=\"content\"> Do you really want to change 1 by 2 ? </div>\r\n      <div className=\"buttons\">\r\n        <button id=\"yes\" onClick={() => sendData()}> Yes </button>\r\n        <button id=\"no\" onClick={() => handleChange(-1,-1)}> No </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AddEvent(){\r\n  const events ={\r\n    event: \"\",\r\n    date: \"\",\r\n    position: \"\",\r\n    couvreurs: [{name : \"\"}],\r\n  }\r\n\r\n  const handleFormChangeE = (e) =>{\r\n    events.event=e.target.value;\r\n  }\r\n\r\n  const handleFormChangeD = (e) =>{\r\n    events.date=e.target.value;\r\n  }\r\n\r\n  const handleFormChangeP = (e) =>{\r\n    events.position=e.target.value;\r\n  }\r\n\r\n  const handleFormChangeC = (e) =>{\r\n    events.couvreurs=e.target.value.split(' ');\r\n  }\r\n  \r\n  const send = async (e) => {\r\n    //alert(events.event + \" \" + events.date + \" \" +events.position + \" \" +events.couvreurs);\r\n    let link='http://localhost:9000/events?event=' + events.event + '&date=' + events.date + '&name=' + events.position + '&lat=0&lng=0';\r\n    for(let i=0; i<events.couvreurs.length; i++){\r\n      link=link + '&couvreurs= ' + events.couvreurs[i];\r\n    }\r\n    await axios.post(link);\r\n  }\r\n\r\n  let year=new Date();\r\n  return (\r\n    <div id=\"add\">\r\n      <h3>Add an Event</h3>\r\n      <form onSubmit={(event) => send(event)}>\r\n        <input type=\"text\" placeholder=\"Event Name\" name=\"event\" onBlur={(e) => handleFormChangeE(e)} required/>\r\n        <div className=\"date\">\r\n          <label>Date of the event</label>\r\n          <input type=\"date\" name=\"date\" onBlur={(e) => handleFormChangeD(e)} required/>\r\n        </div>\r\n        <input type=\"text\" placeholder=\"Place of the Event\" name=\"position\" onBlur={(e) => handleFormChangeP(e)} required/>\r\n        <input type=\"text\" placeholder=\"Couvreurs\" name=\"couvreurs\" onBlur={(e) => handleFormChangeC(e)} required/>\r\n        <input id=\"submit\" type=\"submit\" value=\"SUBMIT\" required/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction sendData(){\r\n  if(password==true){\r\n    axios.post('http://localhost:9000/events/any/' + oldValue.slice(0,oldValue.length-1) +'?to='+value);\r\n  }\r\n  if(password==false){\r\n    console.log(\"database: \" + oldValue + \" nouvelle: \" + value);\r\n    //on se connecte Ã  la db\r\n    //on trouve lelement qui correspond Ã  oldValue,\r\n    //Si on trouve on demande un mot de passe => on modifie la valeur dans la db\r\n    var data=\"Enter Password:<br></br><input id='password' type='password' placeholder='Password'>\";\r\n    document.getElementById(\"content\").innerHTML = data;\r\n    document.getElementById(\"yes\").innerHTML = \"Send\";\r\n    document.getElementById(\"no\").innerHTML = \"Cancel\";\r\n    password=true;\r\n  }\r\n  else{\r\n    console.log(document.getElementById(\"password\").value);\r\n    password=false;\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    popUp.style.display = \"none\";\r\n    yes=false;\r\n\r\n    //We set back the buttons setup\r\n    document.getElementById(\"yes\").innerHTML = \"Yes\";\r\n    document.getElementById(\"no\").innerHTML = \"No\";\r\n  }\r\n  \r\n}\r\n\r\nasync function handleChange(params, dvalue){\r\n  if(params!=dvalue && dvalue!=null && yes==false && params!='' && dvalue!='' && params!='Cliquer ici pour acceder' && dvalue!='Cliquer ici pour acceder'){\r\n    console.log(\"on rentre dans la boucle \" + params + \" \" + dvalue);\r\n    //return <div className=\"pop-up\">Do you Really want to change ${dvalue} by ${params} ? </div>\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    if(popUp.style.display!=\"flex\"){\r\n      popUp.style.display = \"flex\";\r\n      console.log(\"on affiche\");\r\n    }\r\n      \r\n      document.getElementById(\"content\").innerHTML = \"Do you Really want to change \" + dvalue + \" by \" + params + \" ?\";\r\n      oldValue=dvalue;\r\n      value=params;\r\n      yes=true;\r\n      console.log(\"dans la fonction old: \" + oldValue + \" / nouv: \" + value );\r\n      // PROBLEME SI ON MODIFIE UNE DATE\r\n  }\r\n  else if(params==-1){\r\n    console.log(\"on ferme\");\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    popUp.style.display = \"none\";\r\n    yes=false;\r\n    console.log(\"component: \" + component.textContent);\r\n    component.innerHTML=oldValue;\r\n    console.log(\"component: \" + component.textContent);\r\n    \r\n    if(password==true){\r\n      //We set back the buttons setup\r\n      document.getElementById(\"yes\").innerHTML = \"Yes\";\r\n      document.getElementById(\"no\").innerHTML = \"No\";\r\n      password=false;\r\n      //We update in the database\r\n      //axios.post()\r\n    }\r\n    \r\n  }\r\n  else if(params==''){\r\n    axios.post('http://localhost:9000/events/delete/' + JSON.stringify({event:dvalue.slice(0,dvalue.length-1)}));\r\n    //component.innerHTML=dvalue;\r\n  }\r\n  else if(dvalue==''){\r\n    component.innerHTML=params;\r\n  }\r\n  \r\n}\r\n\r\n//Code taken from the exemple presentation for react-table\r\nfunction Table({ columns, data }) {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useSortBy\r\n    )\r\n\r\n    let lol=null;\r\n  \r\n    return (\r\n      <>\r\n        <table className=\"tableau\"  {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span >\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' ð½'\r\n                          : ' ð¼'\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map(\r\n              (row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        <td className=\"cellule\" {...cell.getCellProps()}>\r\n                          <div >{cell.render('Cell')} </div>\r\n                        </td>\r\n                        //<div contentEditable onClick={(truc) => {lol=truc.target.textContent; component=truc.currentTarget; console.log(\"on a \" + component.textContent)}} onBlur={(truc)=> handleChange(truc.target.textContent,lol)}>{cell.render('Cell')} </div>\r\n                        //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )}\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n      </>\r\n    )\r\n  }\r\n\r\n//Code taken from the exemple presentation for react-table\r\nfunction TableModif({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy\r\n  )\r\n\r\n  let lol=null;\r\n\r\n  return (\r\n    <>\r\n      <table className=\"tableau\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                // Add the sorting props to control sorting. For this example\r\n                // we can add them into the header props\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span >\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ð½'\r\n                        : ' ð¼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(\r\n            (row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return (\r\n                      //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                      <td className=\"cellule\" {...cell.getCellProps()}>\r\n                        <div contentEditable onClick={(truc) => {lol=truc.target.textContent; if(yes==false)component=truc.currentTarget; console.log(\"on a \" + component.textContent)}} onBlur={(truc)=> handleChange(truc.target.textContent,lol)}>{cell.render('Cell')} </div>\r\n                      </td>\r\n                      //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )}\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}